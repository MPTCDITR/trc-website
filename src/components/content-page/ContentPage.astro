---
import { formatDate, toISOString } from "@/lib/date-helper";

import { Separator } from "@/components/ui/separator";
import Main from "@/components/Main.astro";
import NextPreviousButton from "@/components/NextPreviousButton.astro";
import ProseWrapper from "@/components/ProseWrapper.astro";
import TextElement from "@/components/TextElement";

import type { SupportedLanguage } from "@/i18n/ui";
import ArticleLayout from "@/layouts/ArticleLayout.astro";
import { Image } from "astro:assets";
import type { CollectionEntry, ContentEntryMap } from "astro:content";
import { getCollection } from "astro:content";

interface Props {
  page:
    | CollectionEntry<"articles">
    | CollectionEntry<"cybersecurity-tips">
    | CollectionEntry<"news-releases">
    | CollectionEntry<"events">
    | CollectionEntry<"activities">;
}

const { page } = Astro.props;
const {
  params: { lang },
} = Astro;
const { Content } = await page.render();

const publicationDate = new Date(page.data.date);

let previous = "";
let next = "";
const url = Astro.url.pathname;
const splitUrl = url.split("/");
const baseUrl = splitUrl.slice(0, -1).join("/");

const type = splitUrl[splitUrl.length - 2] as keyof ContentEntryMap;

const articles = await getCollection(type);
const langArticles = articles.filter((article) => article.data.lang === lang);

langArticles.map((article, index) => {
  if (page.id === article.id) {
    if (index !== 0) {
      const previousArticle = langArticles[index - 1];
      const previousSlug = previousArticle?.slug.split("/").slice(1).join("/");
      previous = `${baseUrl}/${previousSlug}`;
    }
    if (index !== langArticles.length - 1) {
      const nextArticle = langArticles[index + 1];
      const nextSlug = nextArticle?.slug.split("/").slice(1).join("/");
      next = `${baseUrl}/${nextSlug}`;
    }
  }
});
---

<ArticleLayout
  title={page.data.title}
  description={page.data.description}
  image={page.data.image.src}
  canonicalURL={new URL(Astro.url.pathname, Astro.site).toString()}
  publishDate={publicationDate}
>
  <Main>
    <ProseWrapper class="px-4 sm:px-6 md:px-8">
      <header>
        <figure role="none" class="-mx-4 sm:-mx-6 md:-mx-8">
          <Image
            src={page.data.image}
            alt={page.data.title}
            class="w-full rounded-lg"
            loading="eager"
            quality="high"
            format="webp"
            widths={[480, 768, 1024]}
            sizes="(min-width: 1024px) 100vw"
          />
          <figcaption class="sr-only">
            {page.data.title}
          </figcaption>
        </figure>
        <div class="my-6 space-y-6">
          <TextElement variant="subheading" className="mb-0">
            {page.data.title}
          </TextElement>
          <div class="items-center gap-10 text-muted-foreground sm:flex">
            <span class="author byline flex flex-row gap-2 text-sm">
              <span class="italic text-secondary">Published:</span>

              <span class="italic">{page.data.author}</span>
            </span>

            <time
              datetime={toISOString(publicationDate)}
              class="dateline flex flex-row gap-2 text-sm"
            >
              <span class="italic text-secondary">Date:</span>

              <span class="italic"
                >{formatDate(publicationDate, lang as SupportedLanguage)}</span
              >
            </time>
          </div>
        </div>
      </header>
      <Separator className="m-2" />
      <section>
        <Content />
      </section>
      <NextPreviousButton previousUrl={previous} nextUrl={next} />
    </ProseWrapper>
  </Main>
</ArticleLayout>

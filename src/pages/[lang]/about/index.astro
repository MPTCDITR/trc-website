---
import { Separator } from "@/components/ui/separator";
import Main from "@/components/Main.astro";
import AboutTRC from "@/components/page/about/AboutTRC.astro";
import ChairmanKeynote from "@/components/page/about/ChairmanKeynote.astro";
import MissionVision from "@/components/page/about/MissionVision.astro";
import TextElement from "@/components/TextElement";

import { languages, type SupportedLanguage } from "@/i18n/ui";
import OrganizationLayout from "@/layouts/OrganizationLayout.astro";
import enAboutUs from "src/static/about-us/en-about-us.webp";
import kmAboutUs from "src/static/about-us/km-about-us.webp";

export async function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({
    params: { lang },
  }));
}

const lang = Astro.params.lang as SupportedLanguage;

const langImages = {
  en: enAboutUs,
  km: kmAboutUs,
};

const currentImage = langImages[lang] || enAboutUs;

const title = "Explore DSC";
const description =
  "Learn about the Digital Security Committee's strategic goals, roles, and responsibilities in developing Cambodia's digital government policy for 2022-2035.";
---

<OrganizationLayout
  title={title}
  description={description}
  image={currentImage.src}
>
  <Main>
    <div class="flex flex-col gap-12 py-8">
      <section aria-label={"about dsc"}>
        <header>
          <TextElement
            variant="heading"
            className="text-text text-center lg:text-3xl"
          >
            Telecommunication Regulator of Cambodia
          </TextElement>
        </header>
      </section>
      <div class="flex flex-nowrap gap-0 lg:gap-5 2xl:gap-10">
        <aside class="sticky top-1/2 h-full lg:size-full">
          <ul class="hidden lg:flex lg:flex-col">
            <li class="whitespace-nowrap">
              <a href="#chairman-keynote/">Chairman keynote</a>
            </li>
            <li class="whitespace-nowrap">
              <a href="#mission-vision/">Mission & Vision</a>
            </li>
            <li class="whitespace-nowrap">
              <a href="#about-trc/">About TRC</a>
            </li>
          </ul>
        </aside>
        <main>
          <section
            aria-labelledby="chairman-keynote"
            id="chairman-keynote/"
            class="scroll-mt-20 2xl:scroll-mt-[93px]"
          >
            <TextElement variant="subheading" className="p-2">
              Chairmanâ€™s Keynote
            </TextElement>
            <ChairmanKeynote />
          </section>
          <Separator
            className="mx-auto border border-yellow-500 lg:w-[50rem]"
          />
          <section
            aria-labelledby="mission-vision"
            id="mission-vision/"
            class="scroll-mt-20 2xl:scroll-mt-[93px]"
          >
            <TextElement variant="subheading" className="p-2">
              Mission & Vision
            </TextElement>
            <MissionVision />
          </section>
          <Separator
            className="mx-auto border border-yellow-500 lg:w-[50rem]"
          />
          <section
            aria-labelledby="about-trc"
            id="about-trc/"
            class="scroll-mt-20 2xl:scroll-mt-[93px]"
          >
            <TextElement variant="subheading" className="p-2">
              About TRC
            </TextElement>
            <AboutTRC />
          </section>
        </main>
      </div>
    </div>
  </Main>
</OrganizationLayout>

<script>
  (() => {
    window.addEventListener("DOMContentLoaded", () => {
      const observer = new IntersectionObserver((entries) => {
        let foundFirstVisible = false;

        entries.forEach((entry) => {
          const id = entry.target.getAttribute("id");

          const listItem = document.querySelector(`li a[href="#${id}"]`);

          if (entry.intersectionRatio > 0 && !foundFirstVisible) {
            if (listItem && listItem.parentElement) {
              listItem.parentElement.classList.add("text-secondary");
            }
            foundFirstVisible = true;
          } else {
            if (listItem && listItem.parentElement) {
              listItem.parentElement.classList.remove("text-secondary");
            }
          }
        });
      });

      document.querySelectorAll("section[id]").forEach((section) => {
        observer.observe(section);
      });
      // eslint-disable-next-line prettier/prettier
    });
  })();
</script>

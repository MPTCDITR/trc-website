---
import Main from "@/components/Main.astro";
import Chairman from "@/components/page/structure/Chairman.astro";
import Director from "@/components/page/structure/Director.astro";
import TextElement from "@/components/TextElement";

import { LEADERS_TYPES } from "@/content/leader.type";
import { languages, type SupportedLanguage } from "@/i18n/ui";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const title = "Structure";

export async function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({
    params: { lang },
  }));
}

const lang = Astro.params.lang as SupportedLanguage;

const allLeaders = (
  await getCollection("secretaries", (leaders) => leaders.data.lang === lang)
).map((leaders) => leaders);

const chairs = allLeaders.filter(
  (leaders) => leaders.data.role === LEADERS_TYPES.CHAIR,
);
const commissioners = allLeaders.filter(
  (leaders) => leaders.data.role === LEADERS_TYPES.COMMISSIONERCARD,
);
const directors = allLeaders.filter(
  (leaders) => leaders.data.role === LEADERS_TYPES.DIRECTOR,
);
---

<BaseLayout title={title}>
  <Main class="max-w-[1680px]">
    <header>
      <TextElement variant="heading" className="text-text text-center">
        TRC Leader
      </TextElement>
    </header>
    <div class="flex flex-nowrap gap-0 xl:gap-5 2xl:gap-10">
      <aside class="sticky top-1/2 h-full">
        <ul class="hidden xl:flex xl:flex-col">
          <li class="whitespace-nowrap text-secondary">
            <a href="#chairman/">Chairman</a>
          </li>
          <li class="whitespace-nowrap">
            <a href="#comissioner/">Commissioner</a>
          </li>
          <li class="whitespace-nowrap"><a href="#director/">Director</a></li>
        </ul>
      </aside>

      <main class="w-full">
        <TextElement variant="body" className="py-2 pb-6 text-center">
          The Telecommunication Regulator of Cambodia is led by Chairman Chenda
          Thong, along with the following Commissioners and Directors of Bureaus
        </TextElement>
        <section
          aria-label="Leadership"
          class="scroll-mt-20 overflow-hidden bg-blue-900 2xl:scroll-mt-[93px]"
          id="chairman/"
        >
          {
            chairs.map(async (c) => {
              const { Content } = await c.render();
              return (
                <Chairman
                  title={chairs[0].data.title}
                  name={chairs[0].data.name}
                  image={chairs[0].data.image}
                  Content={Content}
                />
              );
            })
          }
        </section>
        <section
          aria-label="Leadership"
          id="comissioner/"
          class="scroll-mt-20 2xl:scroll-mt-[93px]"
        >
          <TextElement
            variant="subheading"
            className="py-12 text-center text-primary"
          >
            Commissioner
          </TextElement>
          <div class="">
            <ul class="flex flex-wrap justify-center">
              {
                commissioners.map(async (comissioner) => {
                  const { Content } = await comissioner.render();
                  return (
                    <li class="w-full sm:w-1/2 lg:w-1/3">
                      <Director
                        title={comissioner.data.title}
                        name={comissioner.data.name}
                        image={comissioner.data.image}
                        Content={Content}
                      />
                    </li>
                  );
                })
              }
            </ul>
          </div>
        </section>
        <section
          aria-label="Leadership"
          id="director/"
          class="scroll-mt-20 2xl:scroll-mt-[93px]"
        >
          <TextElement
            variant="subheading"
            className="py-12 text-center text-primary"
          >
            Director of Bureau
          </TextElement>
          <div class="">
            <ul class="flex flex-wrap">
              {
                directors.map(async (director) => {
                  const { Content } = await director.render();
                  return (
                    <li class="w-full sm:w-1/2 lg:w-1/3">
                      <Director
                        title={director.data.title}
                        name={director.data.name}
                        image={director.data.image}
                        organization={director.data.organization}
                        Content={Content}
                      />
                    </li>
                  );
                })
              }
            </ul>
          </div>
        </section>
      </main>
      <div class="invisible">
        <ul class="hidden xl:flex xl:flex-col">
          <li class="whitespace-nowrap">Chairman</li>
          <li class="whitespace-nowrap">Commissioner</li>
          <li class="whitespace-nowrap">Director</li>
        </ul>
      </div>
    </div>
  </Main>
</BaseLayout>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section[id]");
    const navLinks = Array.from(document.querySelectorAll("li a"));

    const handleScroll = () => {
      let closestSection = sections[0];
      let minDistance = Math.abs(sections[0].getBoundingClientRect().top);

      sections.forEach((section) => {
        const distance = Math.abs(section.getBoundingClientRect().top);
        if (distance < minDistance) {
          minDistance = distance;
          closestSection = section;
        }
      });

      navLinks.forEach((link) =>
        link.parentElement?.classList.remove("text-secondary"),
      );

      const id = closestSection.getAttribute("id");
      const activeLink = document.querySelector(`li a[href="#${id}"]`);
      if (activeLink && activeLink.parentElement) {
        activeLink.parentElement.classList.add("text-secondary");
      }
    };

    window.addEventListener("scroll", handleScroll);
  });
</script>
